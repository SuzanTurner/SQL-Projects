-- Retrive all books in the 'Fiction' genre
SELECT * 
FROM "Books"
WHERE "Genre" = 'Fiction';

-- Find books published after 1970
select * from "Books"
where "Published_Year" > 1970;

-- List all customers from Canada
select "Name" from "Customers"
where "Country" = 'Canada';

-- Show orders placed in November 2023
select * from "Orders"
where "Order_Date" between '2023-11-01' and '2023-11-30';

-- Retrive total stock of books available
select sum("Stock") as total_stock
from "Books";

-- Find details of the most expensive book
select * from "Books"
where "Price" = (
select max("Price")
from "Books"
)

-- or

select * from "Books"
order by "Price" desc
Limit 1

-- Number of people who ordered more than 1 book
SELECT count("Quantity") AS no_of_peeps_with_more_than_1_book
FROM "Orders"
WHERE "Quantity" > 1;

-- Retrive all orders which cost more than 20$
select * from "Orders"
where "Total_Amount" > 20

select count("Total_Amount") as num_total
from "Orders"
where "Total_Amount" > 20

-- List all genres in the Books table
select distinct "Genre" from "Books"

SELECT COUNT(DISTINCT "Genre") AS total_genres
FROM "Books";

-- Find the book with the lowest stock
SELECT "Title"
FROM "Books"
WHERE "Stock" = (SELECT MIN("Stock") FROM "Books");

-- Calculate revenue generated by all the orders
select sum("Total_Amount") as total_revenue
from "Orders"

-- Advanced 
-- Retrive number of books sold for each genre
select * from "Orders";
select b."Genre", sum(o."Quantity")
from "Orders" o
join "Books" b on o."Book_ID" = b."Book_ID"
group by "Genre"

-- Find average price of books in "Fantasy" genre
SELECT AVG("Price") AS average_price
FROM "Books"
WHERE "Genre" = 'Fantasy';

-- List customers who placed as least two orders
SELECT c."Name", o."Customer_ID", COUNT(o."Order_ID") AS orders
FROM "Orders" o
JOIN "Customers" c
  ON o."Customer_ID" = c."Customer_ID"
GROUP BY c."Name", o."Customer_ID"
HAVING COUNT(o."Order_ID") >= 2;

-- Find most frequently ordered book
select "Book_ID", count("Order_ID") as orders
from "Orders"
group by "Book_ID"
order by orders desc limit 1

select * from "Books"
where "Book_ID" = 31

-- Show top 3 most expensive books in the "Fantasy" genre
select * from "Books"
where "Genre" = 'Fantasy'
order by "Price" desc limit 3

-- Retrive total quantity sold by each author
select b."Author", sum(o."Quantity") as total_books_sold
from "Orders" o
join "Books" b on o."Book_ID" = b."Book_ID"
group by b."Author"

-- List cities where customers who spent over 30$ are located
SELECT DISTINCT c."City"
FROM "Customers" c
JOIN "Orders" o
  ON c."Customer_ID" = o."Customer_ID"
GROUP BY c."City", c."Customer_ID"
HAVING SUM(o."Total_Amount") > 30;

-- Find customer who spent the most on orders

SELECT c."Name", SUM(o."Total_Amount") AS total_spent
FROM "Customers" c
JOIN "Orders" o
  ON c."Customer_ID" = o."Customer_ID"
GROUP BY c."Name"
ORDER BY total_spent DESC
LIMIT 1;

-- Calculate the stock remaining after fulfilling all orders
SELECT 
    b."Book_ID",
    b."Title",
    b."Stock" - COALESCE(SUM(o."Quantity"), 0) AS remaining_stock
FROM "Books" b
LEFT JOIN "Orders" o
    ON b."Book_ID" = o."Book_ID"
GROUP BY b."Book_ID", b."Title", b."Stock";


